// –ò–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const DOG_STATES = {
    HAPPY: 'happy',
    HUNGRY: 'hungry',
    EATING: 'eating',
    PLAYING: 'playing',
    SLEEPING: 'sleeping',
    SAD: 'sad',
    GONE: 'gone'
};

const PRICES = {
    FOOD: 10,
    TOY: 20,
    PREMIUM: 100
};

// –ò–≥—Ä–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
const state = {
    hunger: 100,
    happiness: 100,
    energy: 100,
    coins: 50,
    dogState: DOG_STATES.HAPPY,
    isSleeping: false,
    lastActionTime: Date.now(),
    inventory: {
        food: 0,
        toys: 0,
        premium: false
    }
};

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const el = {
    dog: document.getElementById('dog'),
    hungerBar: document.getElementById('hunger-bar'),
    happinessBar: document.getElementById('happiness-bar'),
    energyBar: document.getElementById('energy-bar'),
    coinsDisplay: document.getElementById('coins'),
    speechBubble: document.getElementById('speech-bubble'),
    feedBtn: document.getElementById('feed-btn'),
    playBtn: document.getElementById('play-btn'),
    sleepBtn: document.getElementById('sleep-btn'),
    shopBtn: document.getElementById('shop-btn'),
    effects: document.getElementById('effects'),
    notification: document.getElementById('notification')
};

// –§—Ä–∞–∑—ã —Å–æ–±–∞–∫–∏
const PHRASES = [
    "–ì–∞–≤-–≥–∞–≤!",
    "–•–æ—á—É –∫—É—à–∞—Ç—å!",
    "–ü–æ–∏–≥—Ä–∞–µ–º?",
    "–Ø —Ç–µ–±—è –ª—é–±–ª—é!",
    "–ü–æ—á–µ—à–∏ –ø—É–∑–∏–∫–æ!",
    "–ì—É–ª—è—Ç—å!",
    "–ú—è—á–∏–∫ –ø—Ä–∏–Ω–µ—Å–∏!",
    "–•–æ–∑—è–∏–Ω, –Ω–µ –±—Ä–æ—Å–∞–π –º–µ–Ω—è!",
    "–£—Ä–∞! –í–∫—É—Å–Ω—è—à–∫–∞!",
    "–Ø —Å–∞–º—ã–π —Å—á–∞—Å—Ç–ª–∏–≤—ã–π –ø—ë—Å!"
];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Mini App
function initTelegramApp() {
    Telegram.WebApp.ready();
    Telegram.WebApp.expand();
    Telegram.WebApp.enableClosingConfirmation();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    showSpeechBubble("–ü—Ä–∏–≤–µ—Ç, —Ö–æ–∑—è–∏–Ω! –î–∞–≤–∞–π –¥—Ä—É–∂–∏—Ç—å!");
}

// –ü–æ–∫–∞–∑–∞—Ç—å –æ–±–ª–∞—á–∫–æ —Å —Ä–µ—á—å—é
function showSpeechBubble(text) {
    el.speechBubble.textContent = text;
    el.speechBubble.style.opacity = '1';
    el.speechBubble.style.top = '20px';
    
    setTimeout(() => {
        el.speechBubble.style.opacity = '0';
    }, 2000);
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(text) {
    el.notification.textContent = text;
    el.notification.style.opacity = '1';
    el.notification.style.top = '20px';
    
    setTimeout(() => {
        el.notification.style.opacity = '0';
    }, 2000);
}

// –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
function updateUI() {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å-–±–∞—Ä—ã
    el.hungerBar.style.width = `${state.hunger}%`;
    el.happinessBar.style.width = `${state.happiness}%`;
    el.energyBar.style.width = `${state.energy}%`;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–æ–Ω–µ—Ç—ã
    el.coinsDisplay.textContent = state.coins;
    
    // –ò–∑–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç –ø—Ä–∏ –Ω–∏–∑–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö
    if (state.hunger < 30) {
        el.hungerBar.style.background = 'linear-gradient(90deg, #FF0000, #FF4500)';
    } else {
        el.hungerBar.style.background = 'linear-gradient(90deg, #FF6B6B, #FF8E53)';
    }
    
    if (state.happiness < 30) {
        el.happinessBar.style.background = 'linear-gradient(90deg, #00BFFF, #1E90FF)';
    } else {
        el.happinessBar.style.background = 'linear-gradient(90deg, #4ECDC4, #66B3FF)';
    }
    
    if (state.energy < 30) {
        el.energyBar.style.background = 'linear-gradient(90deg, #FFA500, #FF8C00)';
    } else {
        el.energyBar.style.background = 'linear-gradient(90deg, #FFD166, #FFB347)';
    }
}

// –ò–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–±–∞–∫–∏
function changeDogState(newState) {
    state.dogState = newState;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    switch(newState) {
        case DOG_STATES.HAPPY:
            el.dog.src = 'images/dog_happy.png';
            break;
        case DOG_STATES.HUNGRY:
            el.dog.src = 'images/dog_hungry.png';
            break;
        case DOG_STATES.EATING:
            el.dog.src = 'images/dog_playing.gif'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏–≥—Ä—ã –¥–ª—è –µ–¥—ã
            break;
        case DOG_STATES.PLAYING:
            el.dog.src = 'images/dog_playing.gif';
            break;
        case DOG_STATES.SLEEPING:
            el.dog.src = 'images/dog_sleeping.gif';
            break;
        case DOG_STATES.SAD:
            el.dog.src = 'images/dog_sad.png';
            break;
        case DOG_STATES.GONE:
            el.dog.src = 'images/dog_gone.gif';
            break;
    }
    
    // –°–ª—É—á–∞–π–Ω–∞—è —Ñ—Ä–∞–∑–∞
    if (Math.random() > 0.7 && newState !== DOG_STATES.SLEEPING) {
        const randomPhrase = PHRASES[Math.floor(Math.random() * PHRASES.length)];
        showSpeechBubble(randomPhrase);
    }
}

// –°–æ–∑–¥–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç —Å–µ—Ä–¥–µ—á–µ–∫
function createHearts() {
    for (let i = 0; i < 10; i++) {
        setTimeout(() => {
            const heart = document.createElement('div');
            heart.innerHTML = '‚ù§Ô∏è';
            heart.className = 'heart-effect';
            heart.style.left = `${50 + Math.random() * 20}%`;
            heart.style.fontSize = `${20 + Math.random() * 15}px`;
            heart.style.animationDuration = `${2 + Math.random() * 2}s`;
            el.effects.appendChild(heart);
            
            setTimeout(() => {
                heart.remove();
            }, 3000);
        }, i * 200);
    }
}

// –°–æ–∑–¥–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç –º–æ–Ω–µ—Ç
function createCoins(amount) {
    for (let i = 0; i < amount; i++) {
        setTimeout(() => {
            const coin = document.createElement('div');
            coin.innerHTML = 'üí∞';
            coin.className = 'coin-effect';
            coin.style.left = `${Math.random() * 100}%`;
            coin.style.animationDuration = `${1 + Math.random()}s`;
            el.effects.appendChild(coin);
            
            setTimeout(() => {
                coin.remove();
            }, 2000);
        }, i * 100);
    }
}

// –ö–æ—Ä–º–ª–µ–Ω–∏–µ —Å–æ–±–∞–∫–∏
function feed() {
    if (state.hunger >= 100) {
        showSpeechBubble("–Ø –Ω–µ –≥–æ–ª–æ–¥–Ω—ã–π!");
        return;
    }
    
    if (state.coins < PRICES.FOOD) {
        showPaymentDialog(PRICES.FOOD, "–ü–æ–∫—É–ø–∫–∞ –∫–æ—Ä–º–∞");
        return;
    }
    
    state.coins -= PRICES.FOOD;
    changeDogState(DOG_STATES.EATING);
    disableButtons();
    
    setTimeout(() => {
        state.hunger = Math.min(100, state.hunger + 30);
        state.happiness = Math.min(100, state.happiness + 10);
        state.lastActionTime = Date.now();
        changeDogState(DOG_STATES.HAPPY);
        createHearts();
        updateUI();
        enableButtons();
    }, 2000);
}

// –ò–≥—Ä–∞ —Å —Å–æ–±–∞–∫–æ–π
function play() {
    if (state.energy < 20) {
        showSpeechBubble("–Ø —É—Å—Ç–∞–ª...");
        return;
    }
    
    changeDogState(DOG_STATES.PLAYING);
    disableButtons();
    
    setTimeout(() => {
        state.happiness = Math.min(100, state.happiness + 30);
        state.energy = Math.max(0, state.energy - 20);
        state.hunger = Math.max(0, state.hunger - 10);
        state.lastActionTime = Date.now();
        changeDogState(DOG_STATES.HAPPY);
        createHearts();
        updateUI();
        enableButtons();
    }, 3000);
}

// –°–æ–Ω —Å–æ–±–∞–∫–∏
function sleep() {
    if (state.isSleeping) return;
    
    state.isSleeping = true;
    changeDogState(DOG_STATES.SLEEPING);
    disableButtons();
    
    setTimeout(() => {
        state.energy = 100;
        state.hunger = Math.max(0, state.hunger - 15);
        state.isSleeping = false;
        state.lastActionTime = Date.now();
        changeDogState(DOG_STATES.HAPPY);
        showSpeechBubble("–Ø –≤—ã—Å–ø–∞–ª—Å—è!");
        updateUI();
        enableButtons();
    }, 5000);
}

// –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω
function openShop() {
    Telegram.WebApp.showPopup({
        title: "üê∂ –ú–∞–≥–∞–∑–∏–Ω –¥–ª—è –ø—ë—Å–∏–∫–∞",
        message: "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:",
        buttons: [
            {id: 'food', type: 'default', text: `üçñ –ö–æ—Ä–º (${PRICES.FOOD}‚ÇΩ)`},
            {id: 'toy', type: 'default', text: `üéæ –ò–≥—Ä—É—à–∫–∞ (${PRICES.TOY}‚ÇΩ)`},
            {id: 'premium', type: 'default', text: `üåü –ü—Ä–µ–º–∏—É–º (${PRICES.PREMIUM}‚ÇΩ)`},
            {id: 'cancel', type: 'cancel', text: "‚ùå –ó–∞–∫—Ä—ã—Ç—å"}
        ]
    }, (buttonId) => {
        if (buttonId === 'food') {
            showPaymentDialog(PRICES.FOOD, "–ü–æ–∫—É–ø–∫–∞ –∫–æ—Ä–º–∞");
        } else if (buttonId === 'toy') {
            showPaymentDialog(PRICES.TOY, "–ü–æ–∫—É–ø–∫–∞ –∏–≥—Ä—É—à–∫–∏");
        } else if (buttonId === 'premium') {
            showPaymentDialog(PRICES.PREMIUM, "–ü—Ä–µ–º–∏—É–º –ø–∞–∫–µ—Ç");
        }
    });
}

// –ü–ª–∞—Ç–µ–∂–Ω–æ–µ –æ–∫–Ω–æ
function showPaymentDialog(amount, description) {
    Telegram.WebApp.openInvoice({
        currency: 'RUB',
        amount: amount * 100,
        description: description
    }, (status) => {
        if (status === 'paid') {
            state.coins += amount * 2;
            createCoins(amount);
            showNotification(`‚úÖ –°–ø–∞—Å–∏–±–æ! +${amount * 2} –º–æ–Ω–µ—Ç!`);
            updateUI();
        }
    });
}

// –û—Ç–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫–∏
function disableButtons() {
    el.feedBtn.disabled = true;
    el.playBtn.disabled = true;
    el.sleepBtn.disabled = true;
    el.shopBtn.disabled = true;
}

// –í–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫–∏
function enableButtons() {
    el.feedBtn.disabled = false;
    el.playBtn.disabled = false;
    el.sleepBtn.disabled = false;
    el.shopBtn.disabled = false;
}

// –ò–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
function gameLoop() {
    const now = Date.now();
    const hoursSinceAction = (now - state.lastActionTime) / (1000 * 60 * 60);
    
    // –£–º–µ–Ω—å—à–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º
    if (hoursSinceAction > 4) {
        state.hunger = Math.max(0, state.hunger - 5);
        state.happiness = Math.max(0, state.happiness - 3);
    } else if (hoursSinceAction > 2) {
        state.hunger = Math.max(0, state.hunger - 2);
    }
    
    if (!state.isSleeping) {
        state.energy = Math.max(0, state.energy - 1);
    }
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if (state.hunger <= 0 || state.happiness <= 0) {
        changeDogState(DOG_STATES.GONE);
        disableButtons();
        showSpeechBubble("–Ø —É–±–µ–∂–∞–ª... –í–æ—Å–∫—Ä–µ—Å–∏ –º–µ–Ω—è!");
    } else if (state.hunger < 30 || state.happiness < 30 || state.energy < 30) {
        changeDogState(DOG_STATES.SAD);
    } else if (state.dogState === DOG_STATES.SAD || state.dogState === DOG_STATES.HAPPY) {
        changeDogState(DOG_STATES.HAPPY);
    }
    
    updateUI();
}

// –ö–ª–∏–∫ –ø–æ —Å–æ–±–∞–∫–µ
el.dog.addEventListener('click', () => {
    if (state.dogState === DOG_STATES.HAPPY) {
        el.dog.style.transform = 'scale(1.1) rotate(5deg)';
        setTimeout(() => {
            el.dog.style.transform = 'scale(1) rotate(0)';
        }, 300);
        
        const randomPhrase = PHRASES[Math.floor(Math.random() * PHRASES.length)];
        showSpeechBubble(randomPhrase);
    } else if (state.dogState === DOG_STATES.GONE) {
        if (state.coins >= 10) {
            state.coins -= 10;
            state.hunger = 50;
            state.happiness = 50;
            state.energy = 50;
            changeDogState(DOG_STATES.HAPPY);
            enableButtons();
            updateUI();
            showNotification("–ü—ë—Å–∏–∫ –≤–µ—Ä–Ω—É–ª—Å—è! -10 –º–æ–Ω–µ—Ç");
        } else {
            showPaymentDialog(10, "–í–æ—Å–∫—Ä–µ—à–µ–Ω–∏–µ –ø—ë—Å–∏–∫–∞");
        }
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
function initGame() {
    initTelegramApp();
    
    // –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    el.feedBtn.addEventListener('click', feed);
    el.playBtn.addEventListener('click', play);
    el.sleepBtn.addEventListener('click', sleep);
    el.shopBtn.addEventListener('click', openShop);
    
    // –ó–∞–ø—É—Å–∫ –∏–≥—Ä–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞
    setInterval(gameLoop, 60000); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    
    // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    updateUI();
    changeDogState(DOG_STATES.HAPPY);
}

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
document.addEventListener('DOMContentLoaded', initGame);
